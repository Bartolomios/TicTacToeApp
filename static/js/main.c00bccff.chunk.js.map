{"version":3,"sources":["components/Square/Square.module.scss","components/ScoreBoard/ScoreBoard.module.scss","components/Board/Board.module.scss","components/RestartButton/RestartButton.module.scss","components/Square/Square.js","components/Board/Board.js","components/RestartButton/RestartButton.js","components/ScoreBoard/ScoreBoard.js","App.js","index.js"],"names":["module","exports","Square","click","id","clicked","sign","className","styles","square","cross","circle","onClick","Board","squares","clickHandle","squaresArray","turn","map","key","board","RestartButton","restart","restartButton","ScoreBoard","win","draw","scoreBoard","WINNING_COMBINATIONS","App","state","PlayerOneTurn","GameOver","isDraw","handleSquareOnClick","gameOver","boardArray","forEach","item","checkingWin","setState","some","combination","every","index","restartGame","this","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c00bccff.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"square\":\"Square_square__2uSVZ\",\"cross\":\"Square_cross__3JBZu\",\"circle\":\"Square_circle__3CFVs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"scoreBoard\":\"ScoreBoard_scoreBoard__QX25N\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__kNpEF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"restartButton\":\"RestartButton_restartButton__2-vxb\"};","import React from 'react'\r\nimport styles from './Square.module.scss'\r\nconst Square = ({click, id, clicked, sign}) => {\r\n   \r\n    return (\r\n        <button \r\n        className={styles.square + \" \" + (clicked ? (sign === \"cross\" ? styles.cross : styles.circle) : \" \")}\r\n        onClick={()=>click(id)}\r\n        >\r\n       \r\n        </button>\r\n    )\r\n}\r\n\r\nexport default Square\r\n","import React from 'react'\r\nimport Square from '../Square/Square'\r\nimport styles from './Board.module.scss'\r\nconst Board = ({squares, clickHandle, turn}) => {\r\n         \r\n    const squaresArray = squares.map(square => (\r\n         \r\n            <Square \r\n            key = { square.id }\r\n            id = { square.id }\r\n            sign = {square.sign}\r\n            clicked = { square.clicked }\r\n            click = { clickHandle } />\r\n       \r\n    ))\r\n\r\n    return (\r\n       <div className={styles.board}>\r\n       {squaresArray}\r\n       </div>\r\n       \r\n    )\r\n}\r\nexport default Board","import React from 'react'\r\nimport styles from './RestartButton.module.scss';\r\nconst RestartButton = ({restart}) => {\r\n    return (\r\n   <button className={styles.restartButton} onClick={restart}>Try Agin!</button>\r\n    )\r\n}\r\n\r\nexport default RestartButton\r\n","import React from 'react'\r\nimport styles from './ScoreBoard.module.scss'\r\nimport RestartButton from '../RestartButton/RestartButton'\r\n\r\nconst ScoreBoard = ({turn, win , draw, restart}) => {\r\n\r\n    \r\n    const score = () =>{\r\n        let result;\r\n        if(win){\r\n         result = <div className={styles.scoreBoard}>\r\n                <h3>{turn ? \"Circle\" : \"Cross\"} wins!</h3>\r\n                {<RestartButton restart={restart}/>}\r\n        </div>\r\n        }\r\n        else if(draw)\r\n        {\r\n            result = <div className={styles.scoreBoard}>\r\n                <h3>It's Draw!!</h3>\r\n                {<RestartButton restart={restart} />}\r\n            </div>\r\n        }\r\n        else {\r\n            result=null\r\n        }\r\n        return result;\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {score()}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default ScoreBoard\r\n","import React from 'react';\nimport './App.css';\nimport Board from './components/Board/Board'\nimport ScoreBoard from './components/ScoreBoard/ScoreBoard'\n\nconst WINNING_COMBINATIONS = [\n  [0, 1, 2],\n  [3, 4, 5],\n  [6, 7, 8],\n  [0, 3, 6],\n  [1, 4, 7],\n  [2, 5, 8],\n  [0, 4, 8],\n  [2, 4, 6]\n]\nclass App extends React.Component{\nstate={\n  squares:[\n    {\n      id:0,\n      clicked: false,\n      sign: \" \"      \n    },\n    {\n      id: 1,\n      clicked: false,\n      sign: \" \"     \n    },\n    {\n      id: 2,\n      clicked: false,\n      sign: \" \"     \n    },\n    {\n      id: 3,\n      clicked: false,\n       sign: \" \"     \n    },\n    {\n      id: 4,\n      clicked: false,\n      sign: \" \"     \n    },\n    {\n      id: 5,\n      clicked: false,\n       sign: \" \"     \n    },\n    {\n      id: 6,\n      clicked: false,\n      sign: \" \"     \n    },\n    {\n      id: 7,\n      clicked: false,\n      sign: \" \"     \n    },\n    {\n      id: 8,\n      clicked: false,\n      sign: \" \"     \n    },   \n  \n  ],\n  PlayerOneTurn: true,\n  GameOver: false,\n  isDraw:false\n}\n\n\nhandleSquareOnClick = (id) =>{\n  \n  let gameOver = false;\n  if(this.state.GameOver){\n    return\n  }\n\n \n  const boardArray = [...this.state.squares]\n  boardArray.forEach(item=>{\n   \n    if(item.id === id){\n      item.clicked = true;\n      if (this.state.PlayerOneTurn) {\n        item.sign = \"cross\"\n      }\n      else {\n        item.sign = \"circle\"\n      }\n      \n    }\n  })\n  \n  if (this.checkingWin(this.state.PlayerOneTurn)) {\n   gameOver = true;\n  } \n  this.setState({\n    squares: boardArray,\n    PlayerOneTurn: !this.state.PlayerOneTurn,\n    GameOver: gameOver    \n  })\n  this.isDraw();\n}\n\n\ncheckingWin = (turn) => { \n  const sign = turn ? \"cross\" : \"circle\"\n  return WINNING_COMBINATIONS.some(combination => {\n    return combination.every((index) => {\n\n      if(this.state.squares[index].sign === sign)\n      {\n      return true;\n      }\n      else{\n     \n      return false;\n      }\n    })\n\n  })\n}\nisDraw = () => {\n  const boardArray = [...this.state.squares]\n  const isDraw = boardArray.every(item => \n    {      \n      return item.clicked === true\n    })\n  if(isDraw){\n  this.setState(\n  {\n    isDraw\n  })\n  \n  }\n}\nrestartGame = () =>{\n  const boardArray = [...this.state.squares]\n  boardArray.map(square => {\n         return square.sign = \" \",\n          square.clicked = false;\n  \n  })\n  this.setState({\n    squares: boardArray,\n    PlayerOneTurn: true,\n    GameOver: false,\n    isDraw: false\n\n  })\n  \n}\n\nrender(){\n  const { squares, PlayerOneTurn, GameOver, isDraw} = this.state\n  return (\n    <div className=\"App\">\n      <h2>TIC TAC TOE</h2>\n      <Board squares={squares} turn={PlayerOneTurn} clickHandle={this.handleSquareOnClick}/>\n      <ScoreBoard turn={PlayerOneTurn} win={GameOver} draw={isDraw} restart={this.restartGame}/>\n    </div>\n  )\n}\n}\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}